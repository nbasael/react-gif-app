{"version":3,"sources":["components/addCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValor","setInputValor","onSubmit","e","preventDefault","trim","length","categorias","handleSubmit","type","value","onChange","target","inputHandler","placeholder","GetGifs","categoria","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","res","useFetchGifs","GifExpertApp","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EAEPC,mBAAS,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB7C,OACI,sBAAMC,SAAW,SAAAC,GAAC,OATD,SAAAA,GACjBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,KAKIO,CAAaL,IAAnC,SACI,uBAAOM,KAAK,OAAOC,MAAQV,EAAaW,SAAW,SAAAR,GAAC,OAdvC,SAAAA,GACjBF,EAAcE,EAAES,OAAOF,OAaqCG,CAAaV,IAAKW,YAAY,qC,+BCrBrFC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EAAM,mFAAqFF,EAAY,YAD1F,SAEAG,MAAMD,GAFN,cAEbE,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QARtB,kBAWZK,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACrC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCDJO,EAAU,SAAC,GAAmB,IAAjBlB,EAAgB,EAAhBA,UAAgB,ECFd,SAAAA,GAAc,IAAD,EACXjB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAarC,OAPAC,qBAAW,WACPvB,EAAQC,GAAWuB,MAAM,SAAAC,GAAG,OAAIH,EAAS,CACrCf,KAAMkB,EACNL,SAAS,SAEd,CAAEnB,IAEEoB,EDVmBK,CAAazB,GAA/BM,EAD8B,EAC9BA,KAAMa,EADwB,EACxBA,QACd,OACI,qCACI,mCAAOnB,EAAP,OACEmB,GAAW,8CACb,qBAAKJ,UAAU,YAAf,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADCA,EAAIC,aEXzBgB,EAAe,WAAO,IAAD,EAEQ3C,mBAAS,IAFjB,mBAEtBQ,EAFsB,KAEVoC,EAFU,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa7C,aAAe6C,IAC5B,uBACA,6BAEIpC,EAAWiB,KAAK,SAAAR,GAAS,OAAI,cAAC,EAAD,CAA2BA,UAAYA,GAAxBA,YCV5D4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4ac8b3fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategoria }) => {\r\n\r\n    const [ inputValor, setInputValor ] = useState('');\r\n\r\n    const inputHandler = e => {        \r\n        setInputValor(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if ( inputValor.trim().length > 2 ) {\r\n            setCategoria( categorias => [ inputValor, ...categorias ]);\r\n            setInputValor('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ e => handleSubmit(e) }>\r\n            <input type='text' value={ inputValor } onChange={ e => inputHandler(e) } placeholder=\"Ingrese algo para su busqueda\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}","export const GetGifs = async categoria => {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?api_key=iMhjCfo1rTM1RyItpGV8MjIHnTz2SEzH&q=' + categoria + '&limit=20';\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n// import { GetGifs } from '../helpers/GetGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n    const { data, loading } = useFetchGifs(categoria);\r\n    return (\r\n        <>\r\n            <h3> { categoria } </h3>\r\n            { loading && <p>Cargando data</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { GetGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = categoria => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        GetGifs(categoria).then( res => setstate({\r\n            data: res,\r\n            loading: false\r\n        }));\r\n    }, [ categoria ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/addCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [ categorias, setCategorias ] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategoria={ setCategorias }/>\r\n            <hr />\r\n            <ol>\r\n            {\r\n                categorias.map( categoria => <GifGrid key={ categoria } categoria={ categoria } /> )\r\n            }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}